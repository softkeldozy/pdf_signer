import { SpMode, OffChainSignType, } from '../types';
import { EVMOnChainClient, EVMOffChainClient, EvmChains, } from './evm';
import { SolanaOffChainClient } from './solana';
import { TonOffChainClient } from './ton';
export function getClient(mode, options) {
    if (mode === SpMode.OffChain) {
        const offChainOptions = options;
        switch (offChainOptions.signType) {
            case OffChainSignType.EvmEip712:
                return new EVMOffChainClient(offChainOptions);
            case OffChainSignType.Solana:
                return new SolanaOffChainClient(offChainOptions);
            case OffChainSignType.TonConnect:
                return new TonOffChainClient(offChainOptions);
            default:
                throw new Error('ChainType not supported');
        }
    }
    else {
        const { chain } = options;
        switch (chain) {
            case EvmChains[chain]:
                return new EVMOnChainClient(options);
            default:
                throw new Error('ChainType not supported');
        }
    }
}
//# sourceMappingURL=index.js.map