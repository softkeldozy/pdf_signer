import { PrivateKeyAccount, WalletClient } from 'viem';
import { EvmChains } from '../clients/evm/types';
import { AttestationDelegationSignature, RevokeDelegationSignature, SchemaDelegationSignature, OnChainSchema, RecipientEncodingType, OnChainAttestation } from '../types';
export declare function delegateSignAttestation(attestation: OnChainAttestation, options: {
    chain: EvmChains;
    delegationAccount?: PrivateKeyAccount;
    recipientEncodingType?: RecipientEncodingType;
    rpcUrl?: string;
    walletClient?: WalletClient;
    apiKey?: string;
}): Promise<AttestationDelegationSignature>;
export declare function delegateSignRevokeAttestation(attestationId: string, options: {
    chain: EvmChains;
    delegationAccount?: PrivateKeyAccount;
    reason?: string;
    rpcUrl?: string;
    walletClient?: WalletClient;
}): Promise<RevokeDelegationSignature>;
export declare function delegateSignSchema(schema: OnChainSchema, options: {
    chain: EvmChains;
    delegationAccount?: PrivateKeyAccount;
    rpcUrl?: string;
    walletClient?: WalletClient;
}): Promise<SchemaDelegationSignature>;
export declare function checkId(id: string): boolean;
export declare const throwApikeyError: () => never;
//# sourceMappingURL=tools.d.ts.map