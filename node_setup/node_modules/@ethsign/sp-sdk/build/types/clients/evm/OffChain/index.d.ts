import { OffChainClientBase } from '../../../interface/OffChainClientBase';
import { PrivateKeyAccount, WalletClient } from 'viem';
import { EVMOffChainClientOptions } from '../types';
export declare class EVMOffChainClient extends OffChainClientBase {
    walletClient?: WalletClient;
    privateKeyAccount?: PrivateKeyAccount;
    account: {
        address: `0x${string}`;
    };
    constructor(options: EVMOffChainClientOptions);
    getAccount(): Promise<any>;
    signTypedData({ message, types, primaryType, }: {
        message: {
            [key: string]: any;
        };
        types: {
            [key: string]: {
                name: string;
                type: string;
            }[];
        };
        primaryType: string;
    }): Promise<{
        message: any;
        signature: string;
        publicKey: string;
    }>;
    signMessage(message: string): Promise<{
        signature: string;
        message: string;
        publicKey: string;
    }>;
}
//# sourceMappingURL=index.d.ts.map