"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getClient = getClient;
const types_1 = require("../types");
const evm_1 = require("./evm");
const solana_1 = require("./solana");
const ton_1 = require("./ton");
function getClient(mode, options) {
    if (mode === types_1.SpMode.OffChain) {
        const offChainOptions = options;
        switch (offChainOptions.signType) {
            case types_1.OffChainSignType.EvmEip712:
                return new evm_1.EVMOffChainClient(offChainOptions);
            case types_1.OffChainSignType.Solana:
                return new solana_1.SolanaOffChainClient(offChainOptions);
            case types_1.OffChainSignType.TonConnect:
                return new ton_1.TonOffChainClient(offChainOptions);
            default:
                throw new Error('ChainType not supported');
        }
    }
    else {
        const { chain } = options;
        switch (chain) {
            case evm_1.EvmChains[chain]:
                return new evm_1.EVMOnChainClient(options);
            default:
                throw new Error('ChainType not supported');
        }
    }
}
//# sourceMappingURL=index.js.map